<?phpfunction varToStringLine($value) {  return str_replace(array("\r", "\n"), ' ', var_export($value));}function quoteCSV($string) {  return quote($string, '";');}Lagger_Template::registerVarReference('host', $_SERVER['HTTP_HOST']);Lagger_Template::registerVarReference('uri', $_SERVER['REQUEST_URI']);Lagger_Template::registerVar('date', 'date', true, array('Y-m-d'));Lagger_Template::registerVar('time', 'date', true, array('H:i:s'));Lagger_Template::registerVar('session_id', session_id());Lagger_Template::registerVar('process_id', substr(md5(mt_rand()), 25));Lagger_Template::registerModifier('line', 'varToStringLine');Lagger_Template::registerModifier('quote', 'quoteCSV');$handlerCustom = new Lagger_HandlerCustom();$handlerErrors = new Lagger_HandlerErrors();$handlerExceptions = new Lagger_HandlerExceptions();$daylySkipper = new Lagger_Skipper(new Lagger_Template('%file%%line%'), 60*60*24, new Lagger_ExpiredList(LOGS_DIR.DIRECTORY_SEPARATOR.'skips', '_dayly.errors_skiper'));if(DEBUG_STDOUT) {  $handlerCustom->addAction(new Lagger_ActionPrint(new Lagger_Template(DEBUG_STDOUT_TEMPLATE), true), DEBUG_STDOUT_PROFILES, '__debug', DEBUG_STDOUT_REWRITE_PIN);}if(DEBUG_LOGING) {  $handlerCustom->addAction(new Lagger_ActionFileLog(new Lagger_Template(DEBUG_LOGING_TEMPLATE), DEBUG_LOGING_FILEPATH, DEBUG_LOGING_LIMIT_SIZE, DEBUG_LOGING_LIMIT_DAYS), DEBUG_LOGING_TYPES, '__deblog', DEBUG_STDOUT_REWRITE_PIN);}if(ERRORS_STDOUT) {  $printAction = new Lagger_ActionPrint(new Lagger_Template(ERRORS_STDOUT_TEMPLATE), true);  $handlerErrors->addAction($printAction, ERRORS_STDOUT_TYPES, '__errors', ERRORS_STDOUT_REWRITE_PIN);  $handlerExceptions->addAction($printAction, ERRORS_STDOUT_TYPES, '__errors', ERRORS_STDOUT_REWRITE_PIN);}if(ERRORS_LOGING) {  $logAction = new Lagger_ActionFileLog(new Lagger_Template(ERRORS_LOGING_TEMPLATE), ERRORS_LOGING_FILEPATH, ERRORS_LOGING_LIMIT_SIZE, ERRORS_LOGING_LIMIT_DAYS);  $handlerErrors->addAction($logAction, ERRORS_LOGING_TYPES);  $handlerExceptions->addAction($logAction, ERRORS_LOGING_TYPES);}if(ERRORS_SMS) {  $smsAction = new Lagger_ActionSms(ERRORS_SMS_FROM, ERRORS_SMS_TO, new Lagger_Template(ERRORS_SMS_MESSAGE), true);  $smsAction->setSkipper($daylySkipper, 'logger_errors_sms');  $handlerErrors->addAction($smsAction, 'warning,fatal');  $handlerExceptions->addAction($smsAction, 'warning,fatal');}if(ERRORS_EMAIL) {  $emailAction = new Lagger_ActionMail(ERRORS_EMAIL_FROM, ERRORS_EMAIL_TO, new Lagger_Template(ERRORS_EMAIL_SUBJECT), new Lagger_Template(ERRORS_EMAIL_MESSAGE));  $emailAction->setSkipper($daylySkipper, 'logger_errors_email');  $handlerErrors->addAction($emailAction, 'warning,fatal');  $handlerExceptions->addAction($emailAction, 'warning,fatal');}